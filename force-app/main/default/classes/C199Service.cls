//Generated by wsdl2apex
public class C199Service {
    /*
    public String endpoint = 'Callout:GdmsTrain';
    public String serviceName = 'urn:MY-BD-CustomerVehicleService:MY_BD_CustomerVehicleService';
    public String lastServiceName = 'urn:MY-BD-CustomerVehicleService';
    private String[] ns_map_type_info = new String[]{this.serviceName, 'CustomerVehicleService', '', '', this.lastServiceName, ''};
    */
    public String endpoint;
    public String serviceName;
    public String lastServiceName;
    public List<String> ns_map_type_info;
    private static Map<String,String> COMPANY_NAME_TO_SERVICE_NAME = new Map<String,String>{
        CompanyRepository.C199 => 'urn:MY-BD-CustomerVehicleService:MY_BD_CustomerVehicleService',
        CompanyRepository.C099 => 'urn:MY-BY-CustomerVehicleService:MY_BY_CustomerVehicleService'
    };

    public static Map<String,String> COMPANY_NAME_TO_LAST_SERVICE_NAME = new Map<String,String>{
        CompanyRepository.C199 => 'urn:MY-BD-CustomerVehicleService',
        CompanyRepository.C099 => 'urn:MY-BY-CustomerVehicleService'
    };

    public C199Service(String companyCode){
        this.endpoint = 'callout:';
        this.endpoint += Envir.isSandbox? 'GdmsTrain' : 'GdmsProduction';
        this.serviceName = COMPANY_NAME_TO_SERVICE_NAME.get(companyCode);
        this.lastServiceName = COMPANY_NAME_TO_LAST_SERVICE_NAME.get(companyCode);
        if(companyCode == CompanyRepository.C199){
            this.ns_map_type_info = new List<String>{
                this.serviceName, 'CustomerVehicleService','','',this.lastServiceName,''
            };
        }
        else if(companyCode == CompanyRepository.C099){
            this.ns_map_type_info = new List<String>{
                this.lastServiceName, '',this.serviceName,'CustomerVehicleService','',''
            };
        }
    }


    //query esa
    public CustomerVehicleService.QueryCustomerAccountResponse QueryCustomerAccount(String CompanyCode,String SearchField,String SearchValue,String LastRowID,Integer BatchSize) {
        CustomerVehicleService.QueryCustomerAccount request_x = new CustomerVehicleService.QueryCustomerAccount();
        request_x.CompanyCode = CompanyCode;
        request_x.SearchField = SearchField;
        request_x.SearchValue = SearchValue;
        request_x.LastRowID = LastRowID;
        request_x.BatchSize = BatchSize;
        CustomerVehicleService.QueryCustomerAccountResponse response_x;
        Map<String, CustomerVehicleService.QueryCustomerAccountResponse> response_map_x = new Map<String, CustomerVehicleService.QueryCustomerAccountResponse>();
        response_map_x.put('response_x', response_x);
        WebServiceCallout.invoke(
        this,
        request_x,
        response_map_x,
        new String[]{this.endpoint,
        '',
        this.serviceName,
        'QueryCustomerAccount',
        this.serviceName,
        'QueryCustomerAccountResponse',
        'CustomerVehicleService.QueryCustomerAccountResponse'}
        );
        response_x = response_map_x.get('response_x');
        return response_x;
    }

    //upsert service appointment
    public CustomerVehicleService.AppointmentUpsertResponse AppointmentUpsert(String CompanyCode, String SA_Username,Integer AppointmentNumber,DateTime AppointmentDateTime,String AppointmentStatus,String AppointmentDesc,String ChassisNumber,String CustomerNumber,String ContactNumber,String ContactName,String ContactEmail,String DocumentNumber) {
        CustomerVehicleService.AppointmentUpsert request_x = new CustomerVehicleService.AppointmentUpsert();
        request_x.CompanyCode = CompanyCode;
        request_x.SA_Username = SA_Username;
        request_x.AppointmentNumber = AppointmentNumber == null ? 0 : AppointmentNumber;
        request_x.AppointmentDateTime = AppointmentDateTime;	//	GMT+8:00
        request_x.AppointmentStatus = AppointmentStatus;	//	Leave blank for NEW appointment creation; ARRIVED, COMPLETED, CONVERTED TO RO, NO SHOW, CANCELLED
        request_x.AppointmentDesc = AppointmentDesc;
        request_x.ChassisNumber = ChassisNumber;
        request_x.CustomerNumber = CustomerNumber;
        request_x.ContactNumber = ContactNumber;
        request_x.ContactName = ContactName;
        request_x.ContactEmail = ContactEmail;
        request_x.DocumentNumber = DocumentNumber;
        CustomerVehicleService.AppointmentUpsertResponse response_x;
        Map<String, CustomerVehicleService.AppointmentUpsertResponse> response_map_x = new Map<String, CustomerVehicleService.AppointmentUpsertResponse>();
        response_map_x.put('response_x', response_x);
        WebServiceCallout.invoke(
        this,
        request_x,
        response_map_x,
        new String[]{this.endpoint,
        '',
        this.serviceName,
        'AppointmentUpsert',
        this.serviceName,
        'AppointmentUpsertResponse',
        'CustomerVehicleService.AppointmentUpsertResponse'}
        );
        response_x = response_map_x.get('response_x');
        return response_x;
    }

    public CustomerVehicleService.AppointmentUpsertResponse AppointmentUpsert(CustomerVehicleService.AppointmentUpsert apptParam) {
        CustomerVehicleService.AppointmentUpsertResponse response_x;
        Map<String, CustomerVehicleService.AppointmentUpsertResponse> response_map_x = new Map<String, CustomerVehicleService.AppointmentUpsertResponse>();
        response_map_x.put('response_x', response_x);
        WebServiceCallout.invoke(
            this,
            apptParam,
            response_map_x,
            new String[]{this.endpoint,
            '',
            this.serviceName,
            'AppointmentUpsert',
            this.serviceName,
            'AppointmentUpsertResponse',
            'CustomerVehicleService.AppointmentUpsertResponse'}
        );
        response_x = response_map_x.get('response_x');
        return response_x;
    }

    //query vehicle
    public CustomerVehicleService.QueryVehicleResponse QueryVehicle(String CompanyCode,String SearchField,String SearchValue,String LastRowID,Integer BatchSize) {
        CustomerVehicleService.QueryVehicle request_x = new CustomerVehicleService.QueryVehicle();
        request_x.CompanyCode = CompanyCode;
        request_x.SearchField = SearchField;
        request_x.SearchValue = SearchValue;
        request_x.LastRowID = LastRowID;
        request_x.BatchSize = BatchSize;
        CustomerVehicleService.QueryVehicleResponse response_x;
        Map<String, CustomerVehicleService.QueryVehicleResponse> response_map_x = new Map<String, CustomerVehicleService.QueryVehicleResponse>();
        response_map_x.put('response_x', response_x);
        WebServiceCallout.invoke(
        this,
        request_x,
        response_map_x,
        new String[]{this.endpoint,
        '',
        this.serviceName,
        'QueryVehicle',
        this.serviceName,
        'QueryVehicleResponse',
        'CustomerVehicleService.QueryVehicleResponse'}
        );
        response_x = response_map_x.get('response_x');
        return response_x;
    }

    //query service appointment
    public CustomerVehicleService.AppointmentGetResponse AppointmentGet(String CompanyCode,String Workshop,String SearchField,String SearchValue) {
        CustomerVehicleService.AppointmentGet request_x = new CustomerVehicleService.AppointmentGet();
        request_x.CompanyCode = CompanyCode;
        request_x.Workshop = Workshop;
        request_x.SearchField = SearchField;
        request_x.SearchValue = SearchValue;
        CustomerVehicleService.AppointmentGetResponse response_x;
        Map<String, CustomerVehicleService.AppointmentGetResponse> response_map_x = new Map<String, CustomerVehicleService.AppointmentGetResponse>();
        response_map_x.put('response_x', response_x);
        WebServiceCallout.invoke(
        this,
        request_x,
        response_map_x,
        new String[]{this.endpoint,
        '',
        this.serviceName,
        'AppointmentGet',
        this.serviceName,
        'AppointmentGetResponse',
        'CustomerVehicleService.AppointmentGetResponse'}
        );
        response_x = response_map_x.get('response_x');
        return response_x;
    }

    //query employee resource
    public CustomerVehicleService.QueryUsersResponse QueryUsers() {
        CustomerVehicleService.QueryUsers request_x = new CustomerVehicleService.QueryUsers();
        CustomerVehicleService.QueryUsersResponse response_x;
        Map<String, CustomerVehicleService.QueryUsersResponse> response_map_x = new Map<String, CustomerVehicleService.QueryUsersResponse>();
        response_map_x.put('response_x', response_x);
        WebServiceCallout.invoke(
        this,
        request_x,
        response_map_x,
        new String[]{this.endpoint,
        '',
        this.serviceName,
        'QueryUsers',
        this.serviceName,
        'QueryUsersResponse',
        'CustomerVehicleService.QueryUsersResponse'}
        );
        response_x = response_map_x.get('response_x');
        return response_x;
    }

    //update data
    public CustomerVehicleService.UpdateDataResponse updateData(String ip_json) {
        CustomerVehicleService.UpdateData request_x = new CustomerVehicleService.UpdateData();
        request_x.ip_json = ip_json;
        CustomerVehicleService.UpdateDataResponse response_x;
        Map<String, CustomerVehicleService.UpdateDataResponse> response_map_x = new Map<String, CustomerVehicleService.UpdateDataResponse>();
        response_map_x.put('response_x', response_x);
        WebServiceCallout.invoke(
        this,
        request_x,
        response_map_x,
        new String[]{this.endpoint,
        '',
        this.serviceName,
        'UpdateData',
        this.serviceName,
        'UpdateDataResponse',
        'CustomerVehicleService.UpdateDataResponse'}
        );
        response_x = response_map_x.get('response_x');
        return response_x;
    }
}