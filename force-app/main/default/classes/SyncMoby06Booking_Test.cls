@isTest
public class SyncMoby06Booking_Test {

	@TestSetup
	static void makeData(){
		SyncMobyApiBase_Test.makeData();

		// SyncMoby01User_Test.testPull();
		SyncMoby01User.MobyUserRes resUser = SyncMoby01User_Test.createObj();
		SyncMoby01User jobUser = new SyncMoby01User();
		jobUser.upsertUser(resUser);

		SyncMoby02Contact.MobyContactRes resCont = SyncMoby02Contact_Test.createObj();
		SyncMoby02Contact jobCont = new SyncMoby02Contact();
		jobCont.upsertContact(resCont);

		SyncMoby04Opportunity.MobyOpportunityRes resOppo = SyncMoby04Opportunity_Test.createObj();
		SyncMoby04Opportunity jobOppo = new SyncMoby04Opportunity();
		jobOppo.upsertOppo(resOppo);
		
		// remove Showroom__c records
		delete [SELECT Id FROM Showroom__c];
	}
	
	@isTest
	public static SyncMoby06Booking.MobyBookingRes createObj() {
		TestFactory.genVehicle(3, true);
		Vehicle__c[] vehs = [SELECT Id, Name FROM Vehicle__c];
		
		SyncMoby06Booking.MobyBookingRes response = new SyncMoby06Booking.MobyBookingRes();
		response.bookings = new SyncMoby06Booking.MobyBooking[]{};

		SyncMoby06Booking.MobyBooking book;

		/** Booking 1 */
		book = new SyncMoby06Booking.MobyBooking();
		book.id = 189;
		book.companyId = 1;
		book.companyCode = 'SDAB';
		book.companyName = 'SD Auto Bavaria';
		book.branchId = 3;
		book.branchCode = 'ABAD';
		book.branchName = 'SDAB Ara Damansara';
		book.makeId = 1;
		book.makeCode = 'BMW';
		book.makeName = 'BMW';
		book.opportunityId = 725;
		book.userId = 214;
		book.contactId = 1362;
		book.bookingNo = null;
		book.bookingDate = Datetime.valueOf('2019-01-03 00:00:00');
		book.rcoNo = '167163';
		book.offerId = 193;
		book.bookVariantId = 203;
		book.bookVariantCode = '4S72X';
		book.bookVariantName = 'BMW 430I COUPE M SPORT - CBU';
		book.bookVariantAssemblyCode = 'CBU';
		book.bookVariantBodyType = null;
		book.bookVariantCylinder = 'In-line 4';
		book.bookVariantDisplacement = '1,988';
		book.bookExtVariantUid = null;
		book.bookVariantFuelType = 'Petrol';
		book.bookVariantModelId = 70;
		book.bookModelCode = 'F32X';
		book.bookModelName = 'F32';
		book.bookModelAssemblyCode = null;
		book.bookModelBodyType = null;
		book.bookModelCylinder = null;
		book.bookModelDisplacement = null;
		book.bookModelFuelType = null;
		book.bookVariantMakeId = 5;
		book.bookVariantMakeCode = 'BMW';
		book.bookVariantMakeName = 'BMW';
		book.bookVariantSystem = 'Manual';
		book.bookVariantIsActive = true;
		book.bookVariantCarTypeId = 1;
		book.bookCarTypeCode = 'NEW';
		book.bookCarTypeName = 'New Car';
		book.bookingDocId = null;
		book.bookingImgId = null;
		book.paymentType = 'Financing';
		book.insuranceCompanyId = 157;
		book.insuranceCompanyCode = '2';
		book.insuranceCompanyName = 'ALLIANZ GENERAL INSURANCE CO (MALAYSIA) BHD';
		book.insuranceCompanyAddress = null;
		book.insuranceCompanyFaxNo = null;
		book.insuranceCompanyEmail = null;
		book.insuranceCompanyPhoneNo = null;
		book.insuranceCompanyIsActive = true;
		book.insuranceCompanyIndustryId = 9;
		book.insuranceCompanyIndustryCode = 'INSURANCE';
		book.insuranceCompanyIndustryName = 'Insurance';
		book.insuranceCompanyIndustryIsActive = true;
		book.financeCompanyId = 236;
		book.financeCompanyCode = '80';
		book.financeCompanyName = 'BMW CREDIT';
		book.financeCompanyAddress = null;
		book.financeCompanyFaxNo = null;
		book.financeCompanyEmail = null;
		book.financeCompanyPhoneNo = null;
		book.financeCompanyIsActive = true;
		book.financeCompanyIndustryId = 15;
		book.financeCompanyIndustryCode = 'BANKING';
		book.financeCompanyIndustryName = 'Banks, Financing, Savings & Loans';
		book.financeCompanyIndustryIsActive = true;
		book.tenure = 5.00;
		book.monthYear = null;
		book.loanAmount = 300000.0000;
		book.interestRate = 2.40;
		book.statusId = 26;
		book.statusCode = 'NEW';
		book.statusName = 'New';
		book.remarks = null;
		book.sourceUserid = null;
		book.transferUserId = null;
		book.sellingPrice = null;
		book.colourId = null;
		book.colourCode = null;
		book.colourName = null;
		book.dpPct = null;
		book.dpAmt = null;
		book.hpPct = null;
		book.hpAmt = null;
		book.interestPct = null;
		book.interestAmt = null;
		book.installMonths = null;
		book.sumInsured = null;
		book.insurancePremium = null;
		book.redPlateDeposit = null;
		book.otherFees = null;
		book.deductDeposit = null;
		book.spoiler = null;
		book.mpiInsurance = null;
		book.solarFilm = null;
		book.carCover = null;
		book.doorVisor = null;
		book.licensePlate = null;
		book.hasRegFee = null;
		book.regFee = null;
		book.attachmentId = null;
		book.registrationNo = 'U19';
		book.itemStockId = vehs[0].Name;
		book.categoryId = null;
		book.categoryCode = null;
		book.categoryName = null;
		book.colour = null;
		book.conditionId = null;
		book.conditionCode = null;
		book.conditionName = null;
		book.stockModelId = null;
		book.stockModelCode = null;
		book.stockModelName = null;
		book.stockModelAssemblyCode = null;
		book.stockModelBodyType = null;
		book.stockModelCylinder = null;
		book.stockModelDisplacement = null;
		book.stockModelFuelType = null;
		book.stockModelMakeId = null;
		book.stockModelYear = null;
		book.stockPlateNo = null;
		book.stockRegistrationDate = null;
		book.stockRegistrationNo = null;
		book.stockSellingPrice = null;
		book.stockShortChassis = null;
		book.stockStatusId = null;
		book.stockStatusCode = null;
		book.stockStatusName = null;
		book.stockStatusNumber = null;
		book.stockSubMakeId = null;
		book.stockSubMakeCode = null;
		book.stockSubMakeName = null;
		book.stockVariantId = null;
		book.stockVariantCode = '4S72X';
		book.stockVariantName = 'BMW 430I COUPE M SPORT - CBU';
		book.stockVariantAssemblyCode = 'CBU';
		book.stockVariantBodyType = null;
		book.stockVariantCylinder = 'In-line 4';
		book.stockVariantDisplacement = '1,988';
		book.stockExtVariantUid = null;
		book.stockVariantFuelType = 'Petrol';
		book.stockVariantModelId = 70;
		book.stockVariantMakeId = 5;
		book.stockVariantSystem = 'Manual';
		book.receiptNo = null;
		book.paymentDate = null;
		book.paymentAmt = null;
		book.extBookingUid = null;
		book.insertDate = Datetime.valueOf('2019-01-03 17:10:13.867+08:00');
		book.insertUserId = 24;
		book.updateDate = Datetime.valueOf('2019-01-03 17:12:01.777+08:00');
		book.updateUserId = 68;
		response.bookings.add(book);

		/** Booking 2 */
		book = new SyncMoby06Booking.MobyBooking();
		book.id = 184;
		book.companyId = 1;
		book.companyCode = 'SDAB';
		book.companyName = 'SD Auto Bavaria';
		book.branchId = 4;
		book.branchCode = 'ABSB';
		book.branchName = 'SDAB Sg. Besi';
		book.makeId = 1;
		book.makeCode = 'BMW';
		book.makeName = 'BMW';
		book.opportunityId = 737;
		book.userId = 211;
		book.contactId = 1363;
		book.bookingNo = null;
		book.bookingDate = Datetime.valueOf('2019-01-03 00:00:00');
		book.rcoNo = '12345';
		book.offerId = 192;
		book.bookVariantId = 205;
		book.bookVariantCode = '8E18B7X';
		book.bookVariantName = 'BMW 330E M SPORT - CKD';
		book.bookVariantAssemblyCode = null;
		book.bookVariantBodyType = null;
		book.bookVariantCylinder = null;
		book.bookVariantDisplacement = null;
		book.bookExtVariantUid = null;
		book.bookVariantFuelType = null;
		book.bookVariantModelId = 69;
		book.bookModelCode = 'F30X';
		book.bookModelName = 'F30';
		book.bookModelAssemblyCode = null;
		book.bookModelBodyType = null;
		book.bookModelCylinder = null;
		book.bookModelDisplacement = null;
		book.bookModelFuelType = null;
		book.bookVariantMakeId = 5;
		book.bookVariantMakeCode = 'BMW';
		book.bookVariantMakeName = 'BMW';
		book.bookVariantSystem = 'Manual';
		book.bookVariantIsActive = true;
		book.bookVariantCarTypeId = 1;
		book.bookCarTypeCode = 'NEW';
		book.bookCarTypeName = 'New Car';
		book.bookingDocId = null;
		book.bookingImgId = null;
		book.paymentType = 'Financing';
		book.insuranceCompanyId = 157;
		book.insuranceCompanyCode = '2';
		book.insuranceCompanyName = 'ALLIANZ GENERAL INSURANCE CO (MALAYSIA) BHD';
		book.insuranceCompanyAddress = null;
		book.insuranceCompanyFaxNo = null;
		book.insuranceCompanyEmail = null;
		book.insuranceCompanyPhoneNo = null;
		book.insuranceCompanyIsActive = true;
		book.insuranceCompanyIndustryId = 9;
		book.insuranceCompanyIndustryCode = 'INSURANCE';
		book.insuranceCompanyIndustryName = 'Insurance';
		book.insuranceCompanyIndustryIsActive = true;
		book.financeCompanyId = 236;
		book.financeCompanyCode = '80';
		book.financeCompanyName = 'BMW CREDIT';
		book.financeCompanyAddress = null;
		book.financeCompanyFaxNo = null;
		book.financeCompanyEmail = null;
		book.financeCompanyPhoneNo = null;
		book.financeCompanyIsActive = true;
		book.financeCompanyIndustryId = 15;
		book.financeCompanyIndustryCode = 'BANKING';
		book.financeCompanyIndustryName = 'Banks, Financing, Savings & Loans';
		book.financeCompanyIndustryIsActive = true;
		book.tenure = null;
		book.monthYear = null;
		book.loanAmount = 194000.0000;
		book.interestRate = null;
		book.statusId = 46;
		book.statusCode = 'CANCEL';
		book.statusName = 'Cancelled';
		book.remarks = null;
		book.sourceUserid = null;
		book.transferUserId = null;
		book.sellingPrice = null;
		book.colourId = null;
		book.colourCode = null;
		book.colourName = null;
		book.dpPct = null;
		book.dpAmt = null;
		book.hpPct = null;
		book.hpAmt = null;
		book.interestPct = null;
		book.interestAmt = null;
		book.installMonths = null;
		book.sumInsured = null;
		book.insurancePremium = null;
		book.redPlateDeposit = null;
		book.otherFees = null;
		book.deductDeposit = null;
		book.spoiler = null;
		book.mpiInsurance = null;
		book.solarFilm = null;
		book.carCover = null;
		book.doorVisor = null;
		book.licensePlate = null;
		book.hasRegFee = null;
		book.regFee = null;
		book.attachmentId = null;
		book.registrationNo = null;
		book.itemStockId = vehs[1].Name;
		book.categoryId = null;
		book.categoryCode = null;
		book.categoryName = null;
		book.colour = null;
		book.conditionId = null;
		book.conditionCode = null;
		book.conditionName = null;
		book.stockModelId = null;
		book.stockModelCode = null;
		book.stockModelName = null;
		book.stockModelAssemblyCode = null;
		book.stockModelBodyType = null;
		book.stockModelCylinder = null;
		book.stockModelDisplacement = null;
		book.stockModelFuelType = null;
		book.stockModelMakeId = null;
		book.stockModelYear = null;
		book.stockPlateNo = null;
		book.stockRegistrationDate = null;
		book.stockRegistrationNo = null;
		book.stockSellingPrice = null;
		book.stockShortChassis = null;
		book.stockStatusId = null;
		book.stockStatusCode = null;
		book.stockStatusName = null;
		book.stockStatusNumber = null;
		book.stockSubMakeId = null;
		book.stockSubMakeCode = null;
		book.stockSubMakeName = null;
		book.stockVariantId = null;
		book.stockVariantCode = '8E18B7X';
		book.stockVariantName = 'BMW 330E M SPORT - CKD';
		book.stockVariantAssemblyCode = null;
		book.stockVariantBodyType = null;
		book.stockVariantCylinder = null;
		book.stockVariantDisplacement = null;
		book.stockExtVariantUid = null;
		book.stockVariantFuelType = null;
		book.stockVariantModelId = 69;
		book.stockVariantMakeId = 5;
		book.stockVariantSystem = 'Manual';
		book.receiptNo = null;
		book.paymentDate = null;
		book.paymentAmt = null;
		book.extBookingUid = null;
		book.insertDate = Datetime.valueOf('2019-01-03 17:04:01.61+08:00');
		book.insertUserId = 67;
		book.updateDate = Datetime.valueOf('2019-01-03 17:11:55.603+08:00');
		book.updateUserId = 68;
		response.bookings.add(book);

		/** Booking 3 */
		book = new SyncMoby06Booking.MobyBooking();
		book.id = 425;
		book.companyId = 1;
		book.companyCode = 'SDAB';
		book.companyName = 'SD Auto Bavaria';
		book.branchId = 3;
		book.branchCode = 'ABAD';
		book.branchName = 'SDAB Ara Damansara';
		book.makeId = 1;
		book.makeCode = 'BMW';
		book.makeName = 'BMW';
		book.opportunityId = 757;
		book.userId = 178;
		book.contactId = 1364;
		book.bookingNo = null;
		book.bookingDate = Datetime.valueOf('2019-02-20 00:00:00');
		book.rcoNo = '167251';
		book.offerId = null;
		book.bookVariantId = 130;
		book.bookVariantCode = 'KT08A7';
		book.bookVariantName = 'BMW X5 xDrive40e M Sport (F15)';
		book.bookVariantAssemblyCode = 'CKD';
		book.bookVariantBodyType = 'SAV';
		book.bookVariantCylinder = 'In-Line 4';
		book.bookVariantDisplacement = '1,997';
		book.bookExtVariantUid = 'aafe48a0-f9b9-e611-80de-005056ac629c';
		book.bookVariantFuelType = 'Petrol + Electric';
		book.bookVariantModelId = 29;
		book.bookModelCode = 'F15';
		book.bookModelName = 'BMW X5 F15';
		book.bookModelAssemblyCode = 'CKD';
		book.bookModelBodyType = 'SAV';
		book.bookModelCylinder = 'In-Line 4';
		book.bookModelDisplacement = '1,997 cc';
		book.bookModelFuelType = 'Petrol + Electric Motor';
		book.bookVariantMakeId = 1;
		book.bookVariantMakeCode = 'BMW';
		book.bookVariantMakeName = 'BMW';
		book.bookVariantSystem = 'Manual';
		book.bookVariantIsActive = true;
		book.bookVariantCarTypeId = 13;
		book.bookCarTypeCode = 'USED';
		book.bookCarTypeName = 'Used Car';
		book.bookingDocId = null;
		book.bookingImgId = null;
		book.paymentType = 'Financing';
		book.insuranceCompanyId = 79;
		book.insuranceCompanyCode = '2';
		book.insuranceCompanyName = 'ALLIANZ GENERAL INSURANCE CO (MALAYSIA) BHD';
		book.insuranceCompanyAddress = null;
		book.insuranceCompanyFaxNo = null;
		book.insuranceCompanyEmail = null;
		book.insuranceCompanyPhoneNo = null;
		book.insuranceCompanyIsActive = true;
		book.insuranceCompanyIndustryId = 7;
		book.insuranceCompanyIndustryCode = 'INSURANCE';
		book.insuranceCompanyIndustryName = 'Insurance';
		book.insuranceCompanyIndustryIsActive = true;
		book.financeCompanyId = 126;
		book.financeCompanyCode = '49';
		book.financeCompanyName = 'HONG LEONG BANK BERHAD';
		book.financeCompanyAddress = null;
		book.financeCompanyFaxNo = null;
		book.financeCompanyEmail = null;
		book.financeCompanyPhoneNo = null;
		book.financeCompanyIsActive = true;
		book.financeCompanyIndustryId = 8;
		book.financeCompanyIndustryCode = 'BANKING';
		book.financeCompanyIndustryName = 'Banks, Financing, Savings & Loans';
		book.financeCompanyIndustryIsActive = true;
		book.tenure = 7.00;
		book.monthYear = 'Year';
		book.loanAmount = 302000.0000;
		book.interestRate = 2.32;
		book.statusId = 29;
		book.statusCode = 'CLOSED';
		book.statusName = 'Closed';
		book.remarks = null;
		book.sourceUserid = null;
		book.transferUserId = null;
		book.sellingPrice = null;
		book.colourId = null;
		book.colourCode = null;
		book.colourName = null;
		book.dpPct = null;
		book.dpAmt = null;
		book.hpPct = null;
		book.hpAmt = null;
		book.interestPct = null;
		book.interestAmt = null;
		book.installMonths = null;
		book.sumInsured = null;
		book.insurancePremium = null;
		book.redPlateDeposit = null;
		book.otherFees = null;
		book.deductDeposit = null;
		book.spoiler = null;
		book.mpiInsurance = null;
		book.solarFilm = null;
		book.carCover = null;
		book.doorVisor = null;
		book.licensePlate = null;
		book.hasRegFee = null;
		book.regFee = null;
		book.attachmentId = null;
		book.registrationNo = null;
		book.itemStockId = vehs[2].Name;
		book.categoryId = null;
		book.categoryCode = null;
		book.categoryName = null;
		book.colour = null;
		book.conditionId = null;
		book.conditionCode = null;
		book.conditionName = null;
		book.stockModelId = null;
		book.stockModelCode = null;
		book.stockModelName = null;
		book.stockModelAssemblyCode = null;
		book.stockModelBodyType = null;
		book.stockModelCylinder = null;
		book.stockModelDisplacement = null;
		book.stockModelFuelType = null;
		book.stockModelMakeId = null;
		book.stockModelYear = null;
		book.stockPlateNo = null;
		book.stockRegistrationDate = null;
		book.stockRegistrationNo = null;
		book.stockSellingPrice = null;
		book.stockShortChassis = null;
		book.stockStatusId = null;
		book.stockStatusCode = null;
		book.stockStatusName = null;
		book.stockStatusNumber = null;
		book.stockSubMakeId = null;
		book.stockSubMakeCode = null;
		book.stockSubMakeName = null;
		book.stockVariantId = null;
		book.stockVariantCode = 'KT08A7';
		book.stockVariantName = 'BMW X5 xDrive40e M Sport (F15)';
		book.stockVariantAssemblyCode = 'CKD';
		book.stockVariantBodyType = 'SAV';
		book.stockVariantCylinder = 'In-Line 4';
		book.stockVariantDisplacement = '1,997';
		book.stockExtVariantUid = 'aafe48a0-f9b9-e611-80de-005056ac629c';
		book.stockVariantFuelType = 'Petrol + Electric';
		book.stockVariantModelId = 29;
		book.stockVariantMakeId = 1;
		book.stockVariantSystem = 'Manual';
		book.receiptNo = null;
		book.paymentDate = null;
		book.paymentAmt = null;
		book.extBookingUid = null;
		book.insertDate = Datetime.valueOf('2019-02-20 12:56:00.59+08:00');
		book.insertUserId = 24;
		book.updateDate = Datetime.valueOf('2019-11-12 19:46:01.4+08:00');
		book.updateUserId = 67;
		response.bookings.add(book);

		response.lastKey = 425;

		return response;
	}

	@isTest
	public static void testPull() {
		SyncMoby06Booking.MobyBookingRes res = createObj();

		TestWSMock.SQL_QUEUE_API mock = new TestWSMock.SQL_QUEUE_API(200, JSON.serialize(res));
		Test.setMock(HttpCalloutMock.class, mock);
		Test.startTest();
		SyncMoby06Booking job = new SyncMoby06Booking();
		job.followOnToNext = true;
		System.enqueueJob(job);
		job.execute(null); // kick out of queue
		Test.stopTest();

		System.debug(JSON.serialize([SELECT Id, Name FROM Booking__c]));
		System.assertEquals(3,	[SELECT Id FROM Booking__c].size());
	}

	@isTest
	static void testPullUpdateByMobyId() {
		SyncMoby06Booking.MobyBookingRes res = createObj();

		SyncMoby06Booking job = new SyncMoby06Booking();
		job.upsertBooking(res);

		/** Coverage:
		 * SyncMoby06Booking: 290
		 * 	Remove MobyBranchNumber__c */
		Showroom__c[] shows = [SELECT Id, Name, MobyBranchNumber__c, MobyBranchCode__c FROM Showroom__c];
		shows[1].MobyBranchNumber__c = null;
		update shows;

		TestWSMock.SQL_QUEUE_API mock = new TestWSMock.SQL_QUEUE_API(200, JSON.serialize(res));
		Test.setMock(HttpCalloutMock.class, mock);
		Test.startTest();
		SyncMoby06Booking kob = new SyncMoby06Booking();
		kob.followOnToNext = true;
		kob.execute(null);
		Test.stopTest();
		System.assertEquals(3, [SELECT Id FROM Booking__c].size());
	}

	@isTest static void testPullNoRow() {
		SyncMoby06Booking.MobyBookingRes res = new SyncMoby06Booking.MobyBookingRes();
		TestWSMock.SQL_QUEUE_API mock = new TestWSMock.SQL_QUEUE_API(200, JSON.serialize(res));
		Test.setMock(HttpCalloutMock.class, mock);
		Test.startTest();
		SyncMoby06Booking job = new SyncMoby06Booking();
		job.dateFrom = null;
		job.dateTo = null;
		job.followOnToNext = true;
		job.execute(null);
		Test.stopTest();
	}

	@isTest static void testPullStatusNotOK() {
		TestWSMock.SQL_QUEUE_API mock = new TestWSMock.SQL_QUEUE_API(400, 'Error retrieving data');
		Test.setMock(HttpCalloutMock.class, mock);
        Test.startTest();
        SyncMoby06Booking job = new SyncMoby06Booking();
        job.followOnToNext = true;
        System.enqueueJob(job);
        Test.stopTest();
	}

	@isTest static void testPull_E() {
		Test.setMock(HttpCalloutMock.class, new TestWSMock.HttpThrowE());
		Test.startTest();
		SyncMoby06Booking job = new SyncMoby06Booking();
		job.followOnToNext = true;
		System.enqueueJob(job);
		Test.stopTest();

	}
	@isTest static void testPull_ECallout() {
		Test.setMock(HttpCalloutMock.class, new TestWSMock.HttpThrowECallout());
		Test.startTest();
		SyncMoby06Booking job = new SyncMoby06Booking();
		job.followOnToNext = true;
		job.rowCount = job.minRowCount + 1;
		System.enqueueJob(job);
		Test.stopTest();
	}
	@isTest static void testPull_ECallout2() {
		Test.setMock(HttpCalloutMock.class, new TestWSMock.HttpThrowECallout());
		Test.startTest();
		SyncMoby06Booking job = new SyncMoby06Booking();
		job.followOnToNext = true;
		job.rowCount = job.minRowCount - 1;
		System.enqueueJob(job);
		Test.stopTest();
	}
}